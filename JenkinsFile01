pipeline {
    agent any

    stages {

    stage('Checkout GIT') {
    		 steps {
    			echo 'Pulling...';
    			 git branch: 'aminebt',
    			 url : 'https://github.com/AmineDHM/achat-backend.git';
    			  }
    		  }

    stage('Tools Version Check - mvn,git,java ') {
          parallel {
            stage('Tools Versions Control') {
              steps {
                sh '''mvn --version
                      git --version
                      java -version'''
              }
            }

            stage('Checking POM.xml file Existance) {
              steps {
                fileExists 'pom.xml'
              }
            }

          }
        }

        stage('Maven CLEAN  stage') {

            steps {
            sh 'mvn clean'

            }
        }

        stage('Maven INSTALL stage') {

            steps {
            sh 'mvn install '

            }
        }

		stage('Maven COMPILE  stage') {

            steps {
            sh 'mvn compile'

            }
        }

		stage('Maven PACKAGE  stage') {

            steps {
            sh 'mvn package'

            }
        }


        stage('SonarQube stage') {

            steps {
            sh'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar -DskipTests'

            }
        }

        stage('Test JUnit /Mockito stage') {

            steps {
            sh 'mvn test'

            }
        }

           stage('Nexus stage') {

            steps {
           sh 'mvn deploy -DskipTests'

            }
        }

        stage('Building our docker image') {
            steps {
                script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }

        stage('Deploying image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry( '', registryCredential ) {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('docker compose stage') {

            steps {
           sh 'docker-compose up -d'

            }
        }


     }

 post {
        always {
            emailext body: 'AN EMail describing your pipeline state', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
        }
    }

     }
